/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v2/player/find": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Найти информацию об игроке
         * @description Поиск и получение подробной информации об игроке по никнейму и серверу
         */
        get: operations["find_player_v2_player_find_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/admins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить список администраторов сервера
         * @description Возвращает список администраторов указанного сервера с их данными
         */
        get: operations["get_server_admins_v2_admins_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/online": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список всех онлайн игроков */
        get: operations["get_online_list_v2_online_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/sobes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить текущие собеседования */
        get: operations["get_sobes_list_v2_sobes_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/leaders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список онлайн лидеров */
        get: operations["get_leaders_list_v2_leaders_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/subleaders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список онлайн заместителей */
        get: operations["get_subleaders_list_v2_subleaders_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/fractions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список доступных фракций */
        get: operations["get_fractions_list_v2_fractions_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/fraction": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить онлайн игроков выбранной фракции */
        get: operations["get_fraction_members_v2_fraction_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/ghetto/{server_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Save ghetto zones data */
        post: operations["receive_ghetto_data_v2_ghetto__server_id__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/map": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить карту недвижимости с POI
         * @description Возвращает карту недвижимости для указанного сервера с информацией о ближайших точках интереса
         */
        get: operations["get_property_map_with_poi_v2_map_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/families": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить список семей на сервере
         * @description Возвращает список всех семей на указанном сервере с основной информацией.
         */
        get: operations["get_families_v2_families_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/family": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить подробную информацию о семье
         * @description Возвращает подробную информацию о конкретной семье, включая список участников.
         */
        get: operations["get_family_v2_family_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить статус серверов и API
         * @description Возвращает полный статус всех отслеживаемых серверов Arizona RP и состояние кэша API.
         */
        get: operations["get_status_v2_status_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * AdminsResponse
         * @description Схема API-ответа, содержащая информацию о сервере и список его администраторов.
         */
        AdminsResponse: {
            server: components["schemas"]["app__schemas__admin__ServerInfo"];
            /**
             * Admins
             * @description Список администраторов сервера.
             */
            admins: components["schemas"]["app__schemas__admin__AdminInfo"][];
            /**
             * Timestamp
             * @description Отметка времени (Unix timestamp) получения данных.
             */
            timestamp: number | null;
        };
        /** ApiErrorResponse */
        ApiErrorResponse: {
            /**
             * Error Code
             * @description Код ошибки
             * @example PLAYER_NOT_FOUND
             */
            error_code: string;
            /**
             * Error Message
             * @description Описание ошибки
             * @example Игрок не найден на этом сервере
             */
            error_message: string;
            /**
             * Error Id
             * @description Уникальный идентификатор ошибки
             * @example 550e8400-e29b-41d4-a716-446655440000
             */
            error_id: string;
        };
        /** ArizonaServerInfo */
        ArizonaServerInfo: {
            /**
             * Number
             * @description Идентификатор сервера
             */
            number: number;
            /**
             * Name
             * @description Название сервера
             */
            name: string;
            /** Ip */
            ip: string;
            /** Port */
            port: number;
            /**
             * Online
             * @description Количество онлайн игроков
             */
            online: number;
            /** Maxplayers */
            maxplayers: number;
            /**
             * Password
             * @description Наличие пароля для подключения к серверу
             */
            password: boolean;
            /**
             * Donatemultiplier
             * @description Множитель доната
             */
            donateMultiplier?: number | null;
            /**
             * Experiencemultiplier
             * @description Множитель опыта
             */
            experienceMultiplier?: number | null;
            /**
             * Status
             * @description Текущий статус сервера (online, maintenance, offline)
             * @default online
             */
            status: string;
            /**
             * Status Since
             * @description Время начала текущего статуса (для offline и maintenance)
             */
            status_since?: string | null;
        };
        /** AuctionInfo */
        AuctionInfo: {
            /** Min Bet */
            min_bet: number | null;
            /** End Time */
            end_time: number | null;
            /** Start Price */
            start_price: number | null;
        };
        /** Business */
        Business: {
            /** Id */
            id: number | null;
            /** Name */
            name: string | null;
            /** Type */
            type: number | null;
            location: components["schemas"]["Location"] | null;
            /**
             * On Auction
             * @default false
             */
            on_auction: boolean | null;
            auction_info?: components["schemas"]["AuctionInfo"] | null;
            nearest_poi?: components["schemas"]["app__schemas__player__NearestPOI"] | null;
        };
        /**
         * BusinessItem
         * @description Модель, представляющая бизнес на карте.
         */
        BusinessItem: {
            /**
             * Id
             * @description Уникальный идентификатор имущества.
             */
            id: number;
            /**
             * Lx
             * @description Координата X имущества.
             */
            lx: number;
            /**
             * Ly
             * @description Координата Y имущества.
             */
            ly: number;
            /**
             * Name
             * @description Название имущества.
             */
            name: string;
            /**
             * Owner
             * @description Имя владельца имущества.
             */
            owner: string;
            /**
             * Hasauction
             * @description Признак, находится ли имущество на аукционе.
             */
            hasAuction: boolean;
            /**
             * Auminbet
             * @description Минимальная ставка на аукционе.
             */
            auMinBet: number;
            /**
             * Autimeend
             * @description Время окончания аукциона (Unix timestamp).
             */
            auTimeEnd: number;
            /**
             * Austartprice
             * @description Начальная цена аукциона.
             */
            auStartPrice: number;
            /** @description Информация о ближайшей точке интереса (POI). */
            nearest_poi?: components["schemas"]["app__schemas__map__NearestPOI"] | null;
            /**
             * Type
             * @description Тип бизнеса.
             */
            type: number;
        };
        /**
         * Businesses
         * @description Сгруппированные данные о бизнесах.
         */
        Businesses: {
            /**
             * Onauction
             * @description Массив бизнесов, выставленных на аукцион.
             */
            onAuction: components["schemas"]["BusinessItem"][];
            /**
             * Noauction
             * @description Объект, где ключи - типы бизнесов, а значения - массивы бизнесов, не выставленных на аукцион.
             */
            noAuction: {
                [key: string]: components["schemas"]["BusinessItem"][];
            };
            /**
             * Onmarketplace
             * @description Массив бизнесов, выставленных на торговую площадку.
             */
            onMarketplace: unknown[];
        };
        /** ErrorResponse */
        ErrorResponse: {
            /**
             * Detail
             * @description Описание ошибки
             * @example Online data not found for this server
             */
            detail: string;
        };
        /** Family */
        Family: {
            /**
             * Id
             * @description Идентификатор семьи
             */
            id: number;
            /**
             * Name
             * @description Название семьи
             */
            name?: string | null;
            /**
             * Leader
             * @description Никнейм лидера семьи
             */
            leader?: string | null;
            /**
             * Level
             * @description Уровень семьи
             */
            level?: number | null;
            /**
             * Flagid
             * @description Идентификатор флага семьи
             */
            flagId?: number | null;
            /**
             * Memberscount
             * @description Количество участников семьи
             * @default 0
             */
            membersCount: number | null;
            /**
             * Members
             * @description Список участников семьи
             */
            members: components["schemas"]["FamilyMember"][];
        };
        /** FamilyBase */
        FamilyBase: {
            /**
             * Id
             * @description Идентификатор семьи
             */
            id: number;
            /**
             * Name
             * @description Название семьи
             */
            name?: string | null;
            /**
             * Leader
             * @description Никнейм лидера семьи
             */
            leader?: string | null;
            /**
             * Level
             * @description Уровень семьи
             */
            level?: number | null;
            /**
             * Flagid
             * @description Идентификатор флага семьи
             */
            flagId?: number | null;
            /**
             * Memberscount
             * @description Количество участников семьи
             * @default 0
             */
            membersCount: number | null;
        };
        /** FamilyListResponse */
        FamilyListResponse: {
            /**
             * Families
             * @description Список семей
             */
            families: components["schemas"]["FamilyBase"][];
            /**
             * Timestamp
             * @description Время последнего обновления данных
             */
            timestamp: number;
        };
        /** FamilyMember */
        FamilyMember: {
            /**
             * Id
             * @description Идентификатор аккаунта игрока
             */
            id: number;
            /**
             * Nickname
             * @description Никнейм игрока
             */
            nickname: string;
            /**
             * Rank
             * @description Ранг игрока в семье
             */
            rank?: number | null;
            /**
             * Player Id
             * @description Идентификатор игрока на сервере
             */
            player_id?: number | null;
            /**
             * Warns
             * @description Количество предупреждений игрока
             */
            warns?: number | null;
            /**
             * Leader
             * @description Является ли игрок лидером семьи
             * @default false
             */
            leader: boolean;
            /**
             * Deputy
             * @description Является ли игрок заместителем лидера семьи
             * @default false
             */
            deputy: boolean;
            /**
             * Joined At
             * @description Символическая дата подключения игрока к игре
             */
            joined_at?: number | null;
        };
        /** FamilyResponse */
        FamilyResponse: {
            family: components["schemas"]["Family"];
            /**
             * Timestamp
             * @description Время последнего обновления данных
             */
            timestamp: number;
        };
        /** FractionResponse */
        FractionResponse: {
            /**
             * Data
             * @description Данные игроков выбранной фракции
             * @example {
             *       "1": {
             *         "inUniform": true,
             *         "isLeader": false,
             *         "isZam": false,
             *         "level": 10,
             *         "member": "LSPD",
             *         "name": "Ivan_Petrov",
             *         "position": "Офицер"
             *       },
             *       "2": {
             *         "inUniform": true,
             *         "isLeader": false,
             *         "isZam": false,
             *         "level": 25,
             *         "member": "LSPD",
             *         "name": "Alex_Sidorov",
             *         "position": "Сержант"
             *       },
             *       "3": {
             *         "inUniform": false,
             *         "isLeader": false,
             *         "isZam": false,
             *         "level": 30,
             *         "member": "LSPD",
             *         "name": "Maria_Ivanova",
             *         "position": "Детектив"
             *       }
             *     }
             */
            data: {
                [key: string]: components["schemas"]["OnlinePlayer"];
            };
            /**
             * Timestamp
             * @description Временная метка получения данных
             * @example 1634567890
             */
            timestamp: number;
        };
        /** FractionsListResponse */
        FractionsListResponse: {
            /**
             * Data
             * @description Список доступных фракций
             * @example [
             *       "LSPD",
             *       "FBI",
             *       "ТСР"
             *     ]
             */
            data: string[];
            /**
             * Timestamp
             * @description Временная метка получения данных
             * @example 1634567890
             */
            timestamp: number;
        };
        /**
         * GhettoZone
         * @description Модель, описывающая квадрат на карте (территорию).
         */
        GhettoZone: {
            /** @description Координаты начальной точки квадрата территории. */
            squareStart: components["schemas"]["Point"];
            /** @description Координаты конечной точки квадрата территории. */
            squareEnd: components["schemas"]["Point"];
            /**
             * Color
             * @description Цвет территории в целочисленном представлении.
             * @example 16711680
             */
            color: number;
            /**
             * Fraction Id
             * @description Идентификатор фракции, которой принадлежит территория.
             */
            fraction_id?: number | null;
            /**
             * Money
             * @description Количество денег, связанная с территорией.
             */
            money?: number | null;
            /**
             * Respects
             * @description Количество респектов, связанное с территорией.
             */
            respects?: number | null;
            /**
             * Famid
             * @description Идентификатор семьи, которой принадлежит территория.
             */
            famId?: number | null;
            /**
             * Coins
             * @description Количество 'монет' семьи, связанных с территорией.
             */
            coins?: number | null;
            /**
             * Famname
             * @description Название семьи, которой принадлежит территория.
             */
            famName?: string | null;
            /**
             * Flagid
             * @description Идентификатор флага семьи.
             */
            flagId?: number | null;
            /**
             * Logoid
             * @description Идентификатор логотипа семьи.
             */
            logoId?: number | null;
            /**
             * Arzid
             * @description Идентификатор территории по Аризоновски.
             */
            arzId?: number | null;
            /**
             * Propertyname
             * @description Название особого объекта на территории.
             */
            propertyName?: string | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** House */
        House: {
            /** Id */
            id: number | null;
            /** Name */
            name: string | null;
            location: components["schemas"]["Location"] | null;
            /**
             * On Auction
             * @default false
             */
            on_auction: boolean | null;
            auction_info?: components["schemas"]["AuctionInfo"] | null;
            nearest_poi?: components["schemas"]["app__schemas__player__NearestPOI"] | null;
        };
        /**
         * HouseItem
         * @description Модель, представляющая дом на карте.
         */
        HouseItem: {
            /**
             * Id
             * @description Уникальный идентификатор имущества.
             */
            id: number;
            /**
             * Lx
             * @description Координата X имущества.
             */
            lx: number;
            /**
             * Ly
             * @description Координата Y имущества.
             */
            ly: number;
            /**
             * Name
             * @description Название имущества.
             */
            name: string;
            /**
             * Owner
             * @description Имя владельца имущества.
             */
            owner: string;
            /**
             * Hasauction
             * @description Признак, находится ли имущество на аукционе.
             */
            hasAuction: boolean;
            /**
             * Auminbet
             * @description Минимальная ставка на аукционе.
             */
            auMinBet: number;
            /**
             * Autimeend
             * @description Время окончания аукциона (Unix timestamp).
             */
            auTimeEnd: number;
            /**
             * Austartprice
             * @description Начальная цена аукциона.
             */
            auStartPrice: number;
            /** @description Информация о ближайшей точке интереса (POI). */
            nearest_poi?: components["schemas"]["app__schemas__map__NearestPOI"] | null;
        };
        /**
         * Houses
         * @description Сгруппированные данные о домах.
         */
        Houses: {
            /**
             * Hasowner
             * @description Массив домов с владельцем.
             */
            hasOwner: components["schemas"]["HouseItem"][];
            /**
             * Noowner
             * @description Массив домов без владельца.
             */
            noOwner: components["schemas"]["HouseItem"][];
            /**
             * Onauction
             * @description Массив домов, выставленных на аукцион.
             */
            onAuction: components["schemas"]["HouseItem"][];
            /**
             * Onmarketplace
             * @description Массив домов, выставленных на торговую площадку.
             */
            onMarketplace: unknown[];
        };
        /** LeadersResponse */
        LeadersResponse: {
            /**
             * Data
             * @description Данные о лидерах фракций
             * @example {
             *       "1": {
             *         "inUniform": true,
             *         "isLeader": true,
             *         "isZam": false,
             *         "level": 125,
             *         "member": "LSPD",
             *         "name": "Deps_Cian",
             *         "position": "Капитан"
             *       },
             *       "2": {
             *         "inUniform": true,
             *         "isLeader": true,
             *         "isZam": false,
             *         "level": 98,
             *         "member": "ТСР",
             *         "name": "Michael_Johnson",
             *         "position": "Начальник"
             *       }
             *     }
             */
            data: {
                [key: string]: components["schemas"]["OnlinePlayer"];
            };
            /**
             * Timestamp
             * @description Временная метка получения данных
             * @example 1634567890
             */
            timestamp: number;
        };
        /** LevelInfo */
        LevelInfo: {
            /** Level */
            level: number | null;
            /** Current Exp */
            current_exp: number | null;
            /** Next Exp */
            next_exp: number | null;
        };
        /** Location */
        Location: {
            /** X */
            x: number | null;
            /** Y */
            y: number | null;
        };
        /**
         * MapResponse
         * @description Основная модель ответа для карты недвижимости.
         * @example {
         *       "businesses": {
         *         "noAuction": {
         *           "5": [
         *             {
         *               "auMinBet": 0,
         *               "auStartPrice": 0,
         *               "auTimeEnd": 0,
         *               "hasAuction": false,
         *               "id": 127,
         *               "lx": 1210.84,
         *               "ly": 206.11,
         *               "name": "Продуктовый магазин",
         *               "nearest_poi": {
         *                 "city": "Los-Santos",
         *                 "name": "Закусочная",
         *                 "x": 1215,
         *                 "y": 210
         *               },
         *               "owner": "Player_Two",
         *               "type": 5
         *             }
         *           ]
         *         },
         *         "onAuction": [],
         *         "onMarketplace": []
         *       },
         *       "houses": {
         *         "hasOwner": [],
         *         "noOwner": [],
         *         "onAuction": [
         *           {
         *             "auMinBet": 100000,
         *             "auStartPrice": 50000,
         *             "auTimeEnd": 1698397200,
         *             "hasAuction": true,
         *             "id": 832,
         *             "lx": 1885.88,
         *             "ly": -1113.56,
         *             "name": "Дом",
         *             "nearest_poi": {
         *               "city": "Los-Santos",
         *               "name": "Банк",
         *               "x": 1880,
         *               "y": -1110
         *             },
         *             "owner": "Player_One"
         *           }
         *         ],
         *         "onMarketplace": []
         *       }
         *     }
         */
        MapResponse: {
            /** @description Данные о домах на сервере. */
            houses: components["schemas"]["Houses"];
            /** @description Данные о бизнесах на сервере. */
            businesses: components["schemas"]["Businesses"];
        };
        /** MoneyInfo */
        MoneyInfo: {
            /** Total */
            total: number | null;
            /** Donate Currency */
            donate_currency: number | null;
            /** Hand */
            hand: number | null;
            /** Bank */
            bank: number | null;
            /** Deposit */
            deposit: number | null;
            /** Phone Balance */
            phone_balance: number | null;
            /** Charity */
            charity: number | null;
            /** Personal Accounts */
            personal_accounts: {
                [key: string]: string | null;
            } | null;
        };
        /** OnlinePlayer */
        OnlinePlayer: {
            /**
             * Level
             * @description Уровень игрока
             * @example 10
             */
            level: number;
            /**
             * Name
             * @description Имя игрока
             * @example Deps_Cian
             */
            name?: string | null;
            /**
             * Member
             * @description Название фракции
             * @example LSPD
             */
            member?: string | null;
            /**
             * Position
             * @description Должность во фракции
             * @example Капитан
             */
            position?: string | null;
            /**
             * Isleader
             * @description Игрок является лидером фракции
             * @default false
             * @example true
             */
            isLeader: boolean | null;
            /**
             * Iszam
             * @description Игрок является заместителем
             * @default false
             * @example false
             */
            isZam: boolean | null;
            /**
             * Inuniform
             * @description Одет ли игрок в форму
             * @default false
             * @example true
             */
            inUniform: boolean | null;
        };
        /** OnlinePlayersResponse */
        OnlinePlayersResponse: {
            /**
             * Data
             * @description Данные всех онлайн игроков
             * @example {
             *       "1": {
             *         "inUniform": true,
             *         "isLeader": false,
             *         "isZam": false,
             *         "level": 15,
             *         "member": "LSPD",
             *         "name": "Sergey_Kuznetsov",
             *         "position": "Офицер"
             *       },
             *       "2": {
             *         "inUniform": true,
             *         "isLeader": false,
             *         "isZam": false,
             *         "level": 28,
             *         "member": "ТСР",
             *         "name": "Dmitriy_Volkov",
             *         "position": "Механик"
             *       },
             *       "3": {
             *         "inUniform": false,
             *         "isLeader": false,
             *         "isZam": false,
             *         "level": 5,
             *         "name": "Petr_Novikov"
             *       }
             *     }
             */
            data: {
                [key: string]: components["schemas"]["OnlinePlayer"];
            };
            /**
             * Timestamp
             * @description Временная метка получения данных
             * @example 1634567890
             */
            timestamp: number;
        };
        /** OrganizationInfo */
        OrganizationInfo: {
            /** Name */
            name: string | null;
            /** Rank */
            rank: string | null;
            /** Uniform */
            uniform: unknown | null;
            /** Last Seen */
            last_seen?: number | null;
        };
        /** PlayerFamilyInfo */
        PlayerFamilyInfo: {
            /**
             * Id
             * @description Идентификатор семьи
             */
            id: number;
            /**
             * Name
             * @description Название семьи
             */
            name: string;
            /**
             * Timestamp
             * @description Время последнего обновления данных о семье
             */
            timestamp: number;
            /** @description Информация о члене семьи */
            member_info: components["schemas"]["PlayerFamilyMemberInfo"];
        };
        /** PlayerFamilyMemberInfo */
        PlayerFamilyMemberInfo: {
            /**
             * Id
             * @description Идентификатор игрока
             */
            id?: number | null;
            /**
             * Nickname
             * @description Никнейм игрока
             */
            nickname?: string | null;
            /**
             * Rank
             * @description Ранг в семье
             */
            rank?: number | null;
            /**
             * Leader
             * @description Является ли лидером
             * @default false
             */
            leader: boolean;
            /**
             * Deputy
             * @description Является ли заместителем
             * @default false
             */
            deputy: boolean;
            /**
             * Warns
             * @description Количество предупреждений
             */
            warns?: number | null;
        };
        /** PlayerResponse */
        PlayerResponse: {
            server: components["schemas"]["app__schemas__player__ServerInfo"];
            /** Id */
            id: number;
            status: components["schemas"]["StatusInfo"];
            /** Health */
            health: number | null;
            /** Hunger */
            hunger: number | null;
            /** Law Abiding */
            law_abiding: number | null;
            /** Drug Addiction */
            drug_addiction: number | null;
            /** Phone Number */
            phone_number: number | null;
            /** Spouse */
            spouse: string | null;
            /** Hours Played */
            hours_played: number | null;
            admin?: components["schemas"]["app__schemas__player__AdminInfo"] | null;
            /**
             * Timestamp
             * @description Время последнего обновления данных об онлайне, на основе которых формируются поля status и organization
             */
            timestamp?: number | null;
            level: components["schemas"]["LevelInfo"] | null;
            vip_info: components["schemas"]["VipInfo"] | null;
            money: components["schemas"]["MoneyInfo"] | null;
            property: components["schemas"]["PropertyInfo"] | null;
            /** @description Информация о семье игрока */
            family?: components["schemas"]["PlayerFamilyInfo"] | null;
            /** Job */
            job: string | null;
            organization: components["schemas"]["OrganizationInfo"] | null;
            /** Wanted Level */
            wanted_level: number | null;
            /** Warnings */
            warnings: number | null;
        };
        /**
         * Point
         * @description Модель для координатной точки.
         */
        Point: {
            /**
             * X
             * @description Координата X
             * @example 1885.88
             */
            x: number;
            /**
             * Y
             * @description Координата Y
             * @example -1113.56
             */
            y: number;
        };
        /** PropertyInfo */
        PropertyInfo: {
            /**
             * Houses
             * @default []
             */
            houses: components["schemas"]["House"][] | null;
            /**
             * Businesses
             * @default []
             */
            businesses: components["schemas"]["Business"][] | null;
        };
        /** ServerCacheStatus */
        ServerCacheStatus: {
            /**
             * Last Update
             * @description Временная метка последнего обновления данных
             * @example 1634567890
             */
            last_update?: number | null;
            /**
             * Has Online
             * @description Наличие данных об онлайн игроках
             * @example true
             */
            has_online: boolean;
            /**
             * Has Sobes
             * @description Наличие данных о собеседованиях
             * @example true
             */
            has_sobes: boolean;
        };
        /** ServerCacheStatusResponse */
        ServerCacheStatusResponse: {
            /**
             * Servers
             * @description Статус кэша для каждого сервера
             */
            servers: {
                [key: string]: components["schemas"]["ServerCacheStatus"];
            };
        };
        /** SobesEntry */
        SobesEntry: {
            /**
             * Time
             * @description Время проведения собеседования
             * @example 14:30
             */
            time: string;
            /**
             * Place
             * @description Место проведения собеседования
             * @example Главный офис LSPD
             */
            place: string;
        };
        /** SobesResponse */
        SobesResponse: {
            /**
             * Data
             * @description Данные о запланированных собеседованиях
             * @example {
             *       "FBI": {
             *         "place": "Офис ФБР",
             *         "time": "20:15"
             *       },
             *       "LSPD": {
             *         "place": "Главный офис LSPD",
             *         "time": "18:30"
             *       },
             *       "ТСР": {
             *         "place": "ТСР",
             *         "time": "19:00"
             *       }
             *     }
             */
            data: {
                [key: string]: components["schemas"]["SobesEntry"];
            };
            /**
             * Timestamp
             * @description Временная метка получения данных
             * @example 1634567890
             */
            timestamp: number;
        };
        /** StatusInfo */
        StatusInfo: {
            /** Online */
            online: boolean;
            /** Last Seen */
            last_seen?: number | null;
            /** Player Id */
            player_id?: number | null;
        };
        /** StatusResponse */
        StatusResponse: {
            /**
             * Arizona
             * @description Список серверов Аризоны
             */
            arizona: components["schemas"]["ArizonaServerInfo"][];
            /**
             * Timestamp
             * @description Unix-отметка времени последнего обновления данных о серверах на стороне Аризоны.
             */
            timestamp?: number | null;
            /** @description Статус кэша API для каждого сервера */
            api: components["schemas"]["ServerCacheStatusResponse"];
        };
        /** SubleadersResponse */
        SubleadersResponse: {
            /**
             * Data
             * @description Данные о заместителях фракций
             * @example {
             *       "1": {
             *         "inUniform": true,
             *         "isLeader": false,
             *         "isZam": true,
             *         "level": 49,
             *         "member": "LSPD",
             *         "name": "Jane_Smith",
             *         "position": "Лейтенант"
             *       },
             *       "2": {
             *         "inUniform": false,
             *         "isLeader": false,
             *         "isZam": true,
             *         "level": 78,
             *         "member": "ТСР",
             *         "name": "Robert_Williams",
             *         "position": "Зам. начальника"
             *       },
             *       "3": {
             *         "inUniform": true,
             *         "isLeader": false,
             *         "isZam": true,
             *         "level": 67,
             *         "member": "FBI",
             *         "name": "Emily_Davis",
             *         "position": "Зам. директора"
             *       }
             *     }
             */
            data: {
                [key: string]: components["schemas"]["OnlinePlayer"];
            };
            /**
             * Timestamp
             * @description Временная метка получения данных
             * @example 1634567890
             */
            timestamp: number;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** VipInfo */
        VipInfo: {
            /** Level */
            level: string | null;
            /** Add Vip */
            add_vip: unknown;
            /** Expiration Date */
            expiration_date: unknown;
        };
        /** AdminInfo */
        app__schemas__admin__AdminInfo: {
            /**
             * Nickname
             * @description Игровой никнейм администратора.
             */
            nickname: string;
            /**
             * Short Name
             * @description Короткое имя или тег администратора.
             */
            short_name: string | null;
            /**
             * Vk Url
             * @description URL-адрес профиля ВКонтакте администратора.
             */
            vk_url: string | null;
            /**
             * Forum Url
             * @description URL-адрес профиля на форуме администратора.
             */
            forum_url: string | null;
            /**
             * Position
             * @description Должность администратора.
             */
            position: string | null;
            /**
             * Level
             * @description Уровень администратора. (приблизительно)
             */
            level: number | null;
            /**
             * Status
             * @description Онлайн-статус администратора.
             * @enum {string}
             */
            status: "В сети" | "Не в сети";
        };
        /**
         * ServerInfo
         * @description Информация о сервере.
         */
        app__schemas__admin__ServerInfo: {
            /**
             * Name
             * @description Название сервера.
             */
            name: string;
            /**
             * Id
             * @description Уникальный идентификатор сервера.
             */
            id: number;
        };
        /**
         * NearestPOI
         * @description Информация о ближайшей точке интереса (POI).
         */
        app__schemas__map__NearestPOI: {
            /**
             * Name
             * @description Название ближайшей точки интереса (POI).
             * @example Банк
             */
            name: string;
            /**
             * City
             * @description Город, в котором находится ближайшая POI.
             * @example Los-Santos
             */
            city: string;
            /**
             * X
             * @description Координата X ближайшей POI.
             * @example 1880
             */
            x: number;
            /**
             * Y
             * @description Координата Y ближайшей POI.
             * @example -1110
             */
            y: number;
        };
        /** AdminInfo */
        app__schemas__player__AdminInfo: {
            /** Nickname */
            nickname: string;
            /** Short Name */
            short_name?: string | null;
            /** Vk Url */
            vk_url?: string | null;
            /** Forum Url */
            forum_url?: string | null;
            /** Position */
            position?: string | null;
            /** Level */
            level?: number | null;
        };
        /** NearestPOI */
        app__schemas__player__NearestPOI: {
            /** Name */
            name: string | null;
            /** City */
            city: string | null;
            /** X */
            x: number | null;
            /** Y */
            y: number | null;
        };
        /** ServerInfo */
        app__schemas__player__ServerInfo: {
            /** Name */
            name: string;
            /** Id */
            id: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    find_player_v2_player_find_get: {
        parameters: {
            query: {
                nickname: string;
                serverId: unknown;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PlayerResponse"];
                };
            };
            /** @description Некорректный запрос */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Игрок не найден */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Внутренняя ошибка сервера */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Сервис недоступен */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    get_server_admins_v2_admins_get: {
        parameters: {
            query: {
                /** @description ID сервера */
                serverId: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdminsResponse"];
                };
            };
            /** @description Некорректный запрос (неверный ID сервера) */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Сервер не найден или не поддерживается */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Внутренняя ошибка сервера */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Сервис временно недоступен */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    get_online_list_v2_online_get: {
        parameters: {
            query: {
                serverId: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OnlinePlayersResponse"];
                };
            };
            /** @description Данные не найдены для указанного сервера */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_sobes_list_v2_sobes_get: {
        parameters: {
            query: {
                serverId: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SobesResponse"];
                };
            };
            /** @description Данные собеседований не найдены для указанного сервера */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_leaders_list_v2_leaders_get: {
        parameters: {
            query: {
                serverId: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LeadersResponse"];
                };
            };
            /** @description Данные не найдены для указанного сервера */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_subleaders_list_v2_subleaders_get: {
        parameters: {
            query: {
                serverId: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SubleadersResponse"];
                };
            };
            /** @description Данные не найдены для указанного сервера */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_fractions_list_v2_fractions_get: {
        parameters: {
            query: {
                serverId: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FractionsListResponse"];
                };
            };
            /** @description Данные не найдены для указанного сервера */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_fraction_members_v2_fraction_get: {
        parameters: {
            query: {
                serverId: number;
                fractionId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FractionResponse"];
                };
            };
            /** @description Данные не найдены для указанного сервера */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    receive_ghetto_data_v2_ghetto__server_id__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                server_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    [key: string]: components["schemas"]["GhettoZone"];
                };
            };
        };
        responses: {
            /** @description Data successfully stored */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    get_property_map_with_poi_v2_map_get: {
        parameters: {
            query: {
                serverId: unknown;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MapResponse"];
                };
            };
            /** @description Некорректный запрос */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Внутренняя ошибка сервера */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Сервис недоступен */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_families_v2_families_get: {
        parameters: {
            query: {
                serverId: unknown;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FamilyListResponse"];
                };
            };
            /** @description Данные о семьях не найдены */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Внутренняя ошибка сервера */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    get_family_v2_family_get: {
        parameters: {
            query: {
                /** @description ID семьи для поиска */
                famId: number;
                serverId: unknown;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FamilyResponse"];
                };
            };
            /** @description Семья или данные не найдены */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description Внутренняя ошибка сервера */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiErrorResponse"];
                };
            };
        };
    };
    get_status_v2_status_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StatusResponse"];
                };
            };
            /** @description Внутренняя ошибка сервера */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
